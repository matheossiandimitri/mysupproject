server.port=7050
spring.application.name=contact-book-service

# ==========================================
# Eureka Discovery Server Access
# ==========================================

eureka.client.serviceUrl.defaultZone=http://localhost:7300/eureka/
# When fixing unique id, it allows Eureka to discover multiple instances of the service
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.hostname=localhost
# Hide message "Resolving eureka endpoints via configuration"
logging.level.com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver=WARN

# ==========================================
# Observability (logs, tracing, metrics)
# ==========================================

# Micrometer
management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=contact-book-service
# For production, remove property (default one is 0.1)
management.tracing.sampling.probability=1.0
# Send traces to this url
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# Log with Grafana Loki
loki.serverUrl=localhost:3100

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.correlation=[${spring.application.name:},%X{traceId:-},%X{spanId:-}]