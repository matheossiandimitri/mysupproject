# Don't use random port here
server.port=7010
spring.application.name=job-offers-service

# Disable Spring Cloud LoadBalancer (client-side) in this service. The gateway will manage the load balancing.
spring.cloud.loadbalancer.enabled=false

# ==========================================
# Database
# ==========================================

spring.datasource.url=jdbc:postgresql://localhost:5432/job_offers
spring.datasource.username=msp376340
spring.datasource.password=Yo73o=7pFo=n
# create | create-drop | update | validate | none
spring.jpa.hibernate.ddl-auto=create
# It's recommended to set this property to false, the connection will close right after the query execution
spring.jpa.open-in-view=false

# ==========================================
# Eureka Discovery Server Access
# ==========================================

eureka.client.serviceUrl.defaultZone=http://localhost:7300/eureka/
# When fixing unique id, it allows Eureka to discover multiple instances of the service
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.hostname=localhost
# Hide message "Resolving eureka endpoints via configuration"
logging.level.com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver=WARN

# ==========================================
# Observability (logs, tracing, metrics)
# ==========================================

# Micrometer
management.endpoints.web.exposure.include=health,metrics,prometheus
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
#management.otlp.metrics.export.step=10s
#management.otlp.metrics.export.url=http://localhost:4318/v1/metrics
#management.otlp.tracing.endpoint=http://localhost:4318/v1/traces
#management.otlp.tracing.export.step=10s
#management.tracing.sampling.probability=1.0