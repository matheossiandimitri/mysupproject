# Random port for auto
server.port=${random.int[7010,7020]}
spring.application.name=job-offers-service

# Disable Spring Cloud LoadBalancer (client-side) in this service. The gateway will manage the load balancing.
spring.cloud.loadbalancer.enabled=false

# Database ====================
spring.datasource.url=jdbc:postgresql://localhost:5432/job_offers
spring.datasource.username=msp376340
spring.datasource.password=Yo73o=7pFo=n
# create | create-drop | update | validate | none
spring.jpa.hibernate.ddl-auto=create
# It's recommended to set this property to false, the connection will close right after the query execution
spring.jpa.open-in-view=false

# Eureka Discovery Server Access ==================
eureka.client.serviceUrl.defaultZone=http://localhost:7300/eureka/
# Eureka needs one unique id by instance (I had bugs when using random server.port, use random.value instead)
eureka.instance.instance-id=${spring.application.name}-${random.value}
eureka.instance.hostname=localhost
# Allow Eureka to discover multiple instances of the service
# Hide message "Resolving eureka endpoints via configuration"
logging.level.com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver=WARN
